"use client";

import { useState } from "react";
import { Card, FormField, Loader } from "@/components";
import { useCollection } from "react-firebase-hooks/firestore";
import { collection, DocumentData, orderBy, query } from "firebase/firestore";
import { useSession } from "next-auth/react";
import { db } from "@/firebase";

type Props = {
  data: DocumentData[] | undefined;
  title: string | undefined | null;
};

const RenderCard = ({ data, title }: Props): any => {
  if (data?.length! > 0) {
    return data?.map((post, id) => (
      <>
        <Card _id={id} post={post} />
      </>
    ));
  }
  return (
    <h2 className="mt-5 font-bold text-[#6449ff] text-xl uppercase">{title}</h2>
  );
};

function ShowCase() {
  const { data: session } = useSession();
  const [loading, setLoading] = useState(false);
  const [searchText, setSearchText] = useState("");
  const [allPosts, setAllPosts] = useState<DocumentData[]>();
  const [searchResults, setSearchResults] = useState<DocumentData[]>();
  const [searchTImeout, setSearchTImeout] = useState(null);

  const [posts] = useCollection(
    session && query(collection(db, "posts"), orderBy("createdAt", "desc"))
  );

  let postsData = posts?.docs.map((post) => {
    const data = post.data();
    return data;
  });

  const handleSearchChange = (e: any) => {
    setSearchText(e.target.value);
    setTimeout(() => {
      const searchResults = postsData?.filter((item) => {
        return item.user?.name
          ?.toString()
          .toLowerCase()
          .includes(searchText.toLowerCase()) ||
          item.prompt
            .toString()
            .toLowerCase()
            .includes(searchText.toLowerCase());
      });
      console.log("searchResults:", searchResults);
      setSearchResults(searchResults);
    }, 500);
  };

  return (
    <>
      <div>
        <h1 className=" font-extrabold text-[#222328] text-[32px]">
          The Community ShowCase
        </h1>
        <p className="mt-2 text-[#666e75] text-[14px] max-2-[500px]">
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI.
        </p>
      </div>
      <div className="mt-16 mb-10">
        <FormField
          labelName="Search posts"
          type="text"
          name="text"
          placeholder="Search posts..."
          value={searchText}
          handleChange={handleSearchChange}
        />
      </div>
      <div className="mt-18">
        {loading ? (
          <div className="flex justify-center items-center">
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className="font-medium text-[#666e75] text-xl mb-3">
                Showing results for
                <span className="text-[#222328]"> {searchText}</span>
              </h2>
            )}
            <div className=" grid lg:grid-cold-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3">
              {searchText ? (
                <RenderCard
                  data={searchResults}
                  title="No search reults found"
                />
              ) : (
                <RenderCard data={postsData} title="No posts found" />
              )}
            </div>
          </>
        )}
      </div>
    </>
  );
}

export default ShowCase;
